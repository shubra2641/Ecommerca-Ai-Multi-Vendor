'use strict';
// Handles dynamic rules for shipping zone creation (extracted from inline script)
(function(){
  function cfg(){ var t=document.getElementById('shipping-zone-config'); if(!t) return null; try{return JSON.parse(t.innerHTML.trim());}catch(e){return null;} }
  function init(){ var c=cfg(); if(!c) return; var countries=c.countries||[]; var routes=c.routes||{}; var existing=c.existing||[]; var list=document.getElementById('rules-list'); var addBtn=document.getElementById('add-rule'); if(!list||!addBtn) return; var ruleIndex=0; addBtn.addEventListener('click',function(){ addRule({}); });
    function addRule(data, idx){ if(idx==null) idx=ruleIndex++; var div=document.createElement('div'); div.className='rule-row border rounded p-2 mb-2 bg-light';
      div.innerHTML='\n <div class="row g-2 align-items-end">\n  <div class="col-md-3"><label class="form-label">Country <small><a href="#" class="select-all-country small">Select All</a></small></label><select name="rules['+idx+'][country_id]" class="form-select country-select" required><option value="">--</option>'+countries.map(function(ct){return '<option value="'+ct.id+'" '+(data.country_id==ct.id?'selected':'')+'>'+ct.name+'</option>';}).join('')+'</select></div>\n  <div class="col-md-3"><label class="form-label">Governorate <small><a href="#" class="select-all-gov small">Select All</a></small></label><select name="rules['+idx+'][governorate_id]" class="form-select gov-select"><option value="">--</option></select></div>\n  <div class="col-md-2"><label class="form-label">City <small><a href="#" class="select-all-city small">Select All</a></small></label><select name="rules['+idx+'][city_id]" class="form-select city-select"><option value="">--</option></select></div>\n  <div class="col-md-2"><label class="form-label">Price</label><input name="rules['+idx+'][price]" type="number" step="0.01" min="0" class="form-control" value="'+(data.price||'')+'" placeholder="0.00"></div>\n  <div class="col-md-1"><label class="form-label">Days</label><input name="rules['+idx+'][estimated_days]" type="number" min="0" class="form-control" value="'+(data.estimated_days||'')+'" placeholder="3"></div>\n  <div class="col-md-1 text-end"><button type="button" class="btn btn-outline-danger btn-sm remove" title="'+(c.i18n&&c.i18n.remove||'Remove')+'">&times;</button></div>\n </div>';
      list.appendChild(div); div.querySelector('.remove').addEventListener('click', function(){ div.remove(); }); var countrySelect=div.querySelector('.country-select'); countrySelect.addEventListener('change', function(){ loadGovern(countrySelect, div); });
      var selAllCountry=div.querySelector('.select-all-country'); if(selAllCountry) selAllCountry.addEventListener('click', function(e){ e.preventDefault(); countries.forEach(function(co){ addRule({country_id:co.id}); }); });
      var selAllGov=div.querySelector('.select-all-gov'); if(selAllGov) selAllGov.addEventListener('click', function(e){ e.preventDefault(); if(!countrySelect.value) return; fetch(routes.governorates+'?country='+countrySelect.value).then(r=>r.json()).then(d=>{ (d.data||[]).forEach(g=> addRule({country_id:countrySelect.value, governorate_id:g.id})); }); });
      var selAllCity=div.querySelector('.select-all-city'); if(selAllCity) selAllCity.addEventListener('click', function(e){ e.preventDefault(); var govSel=div.querySelector('.gov-select'); if(!govSel.value) return; fetch(routes.cities+'?governorate='+govSel.value).then(r=>r.json()).then(d=>{ (d.data||[]).forEach(ct=> addRule({country_id:countrySelect.value, governorate_id:govSel.value, city_id:ct.id})); }); });
      if(data.country_id) loadGovern(countrySelect, div, data.governorate_id, data.city_id); }
    function loadGovern(countrySelect, row, selectedGov, selectedCity){ var govSel=row.querySelector('.gov-select'); var citySel=row.querySelector('.city-select'); govSel.innerHTML='<option value="">--</option>'; citySel.innerHTML='<option value="">--</option>'; if(!countrySelect.value) return; fetch(routes.governorates+'?country='+countrySelect.value).then(r=>r.json()).then(d=>{ (d.data||[]).forEach(g=> govSel.insertAdjacentHTML('beforeend','<option value="'+g.id+'">'+g.name+'</option>')); if(selectedGov){ govSel.value=selectedGov; loadCities(govSel, row, selectedCity); } govSel.onchange=function(){ loadCities(govSel, row); }; }); }
    function loadCities(govSel, row, selectedCity){ var citySel=row.querySelector('.city-select'); citySel.innerHTML='<option value="">--</option>'; if(!govSel.value) return; fetch(routes.cities+'?governorate='+govSel.value).then(r=>r.json()).then(d=>{ (d.data||[]).forEach(c=> citySel.insertAdjacentHTML('beforeend','<option value="'+c.id+'">'+c.name+'</option>')); if(selectedCity) citySel.value=selectedCity; }); }
    existing.forEach(function(r){ addRule(r); });
  }
  if(document.readyState==='loading') document.addEventListener('DOMContentLoaded', init); else init();
})();
