'use strict';
// Contact page builder logic extracted from Blade inline script
(function(){
  function parse(){ const t=document.getElementById('contact-blocks-manage-data'); if(!t) return {}; try{return JSON.parse(t.innerHTML.trim()||'{}');}catch(e){return {};}};
  function init(){ const cfg=parse(); const container=document.getElementById('blocksContainer'); if(!container) return; let current=(cfg.blocks||[]).map(b=>{ if(!b.body) b.body={}; if(b.type==='working_hours' && !b.body.hours) b.body.hours=[]; return b; });
    function blockHtml(b,idx){ const statusIcon=b.enabled?'fa-eye':'fa-eye-slash'; let extra=''; if(b.type==='working_hours'){ const rows=(b.body.hours||[]).map((r,i)=>`<tr><td><input type='text' class='form-control form-control-sm wh-day' data-idx='${idx}' data-row='${i}' value='${r.day||''}' placeholder='${cfg.i18n.day}'></td><td><input type='text' class='form-control form-control-sm wh-from' data-idx='${idx}' data-row='${i}' value='${r.from||''}' placeholder='${cfg.i18n.from}'></td><td><input type='text' class='form-control form-control-sm wh-to' data-idx='${idx}' data-row='${i}' value='${r.to||''}' placeholder='${cfg.i18n.to}'></td><td><button type='button' class='btn btn-sm btn-outline-danger wh-remove-row' data-idx='${idx}' data-row='${i}'><i class='fas fa-times'></i></button></td></tr>`).join(''); extra=`<div class='mt-3'><label class='form-label small mb-1 fw-semibold'>${cfg.i18n.workingHours}</label><table class='table table-striped table-bordered align-middle mb-2 working-hours-builder'><thead><tr><th>${cfg.i18n.day}</th><th>${cfg.i18n.from}</th><th>${cfg.i18n.to}</th><th class='w-36'></th></tr></thead><tbody>${rows}</tbody></table><button type='button' class='btn btn-xs btn-outline-primary wh-add-row' data-idx='${idx}'><i class='fas fa-plus me-1'></i>${cfg.i18n.addRow}</button></div>`; } else if(b.type==='location_map'){ extra=`<div class='row g-2 mt-3'><div class='col-6'><label class='form-label small mb-1'>${cfg.i18n.lat}</label><input type='text' class='form-control form-control-sm loc-lat' data-idx='${idx}' value='${b.body.lat||''}' placeholder='${cfg.i18n.latitude}'></div><div class='col-6'><label class='form-label small mb-1'>${cfg.i18n.lng}</label><input type='text' class='form-control form-control-sm loc-lng' data-idx='${idx}' value='${b.body.lng||''}' placeholder='${cfg.i18n.longitude}'></div><div class='col-12'><label class='form-label small mb-1'>${cfg.i18n.embed}</label><textarea class='form-control form-control-sm loc-embed' data-idx='${idx}' rows='2' placeholder='<iframe ...>'>${b.body.embed||''}</textarea><div class='form-text small'>${cfg.i18n.embedHelp}</div></div></div>`; }
      return `<div class='builder-block-header'><div class='d-flex align-items-center gap-2'><i class='fas fa-grip-vertical drag-handle'></i><span class='badge-type'>${b.type}</span></div><div class='block-actions'><button class='btn btn-sm btn-outline-secondary toggle-vis' data-idx='${idx}'><i class='fas ${statusIcon}'></i></button><button class='remove-block' data-idx='${idx}'><i class='fas fa-trash'></i></button></div></div><div class='builder-block-body'><div class='lang-tabs' data-idx='${idx}'>${cfg.languages.map((l,i)=>`<button type='button' class='${i===0?'active':''}' data-lang='${l}' data-idx='${idx}'>${l.toUpperCase()}</button>`).join('')}</div>${cfg.languages.map((l,i)=>`<div class='lang-pane ${i===0?'is-active-lang':'lang-hidden-init'}' data-pane='${idx}-${l}'><label class='form-label small mb-1'>${cfg.i18n.title} (${l.toUpperCase()})</label><input type='text' class='form-control form-control-sm input-title' data-lang='${l}' data-idx='${idx}' value='${(b.title&&b.title[l])||''}'></div>`).join('')}${extra}</div>`; }
    function render(){ container.innerHTML=''; current.forEach((b,i)=>{ const el=document.createElement('div'); el.className='builder-block'; el.dataset.index=i; el.draggable=true; el.innerHTML=blockHtml(b,i); container.appendChild(el); }); bind(); }
    function addBlock(type){ const base={id:null,type,enabled:true,title:{},body:{}}; if(type==='working_hours') base.body.hours=[]; current.push(base); render(); }
    function bind(){ container.querySelectorAll('.remove-block').forEach(btn=>btn.onclick=()=>{ current.splice(+btn.dataset.idx,1); render(); }); container.querySelectorAll('.toggle-vis').forEach(btn=>btn.onclick=()=>{ const i=+btn.dataset.idx; current[i].enabled=!current[i].enabled; render(); }); container.querySelectorAll('.input-title').forEach(inp=>inp.oninput=()=>{ const i=+inp.dataset.idx; const lang=inp.dataset.lang; current[i].title[lang]=inp.value; }); container.querySelectorAll('.lang-tabs').forEach(tabs=>{ tabs.querySelectorAll('button').forEach(b=>{ b.onclick=()=>{ const idx=b.dataset.idx, lang=b.dataset.lang; tabs.querySelectorAll('button').forEach(x=>x.classList.remove('active')); b.classList.add('active'); tabs.parentElement.querySelectorAll('.lang-pane').forEach(p=>{ p.style.display=(p.getAttribute('data-pane')===idx+'-'+lang)?'block':'none'; }); }; }); }); container.querySelectorAll('.wh-add-row').forEach(btn=>btn.onclick=()=>{ const i=+btn.dataset.idx; if(!current[i].body.hours) current[i].body.hours=[]; current[i].body.hours.push({day:'',from:'',to:''}); render(); }); container.querySelectorAll('.wh-remove-row').forEach(btn=>btn.onclick=()=>{ const i=+btn.dataset.idx; const r=+btn.dataset.row; current[i].body.hours.splice(r,1); render(); }); container.querySelectorAll('.wh-day').forEach(inp=>inp.oninput=()=>{ const i=+inp.dataset.idx; const r=+inp.dataset.row; current[i].body.hours[r].day=inp.value; }); container.querySelectorAll('.wh-from').forEach(inp=>inp.oninput=()=>{ const i=+inp.dataset.idx; const r=+inp.dataset.row; current[i].body.hours[r].from=inp.value; }); container.querySelectorAll('.wh-to').forEach(inp=>inp.oninput=()=>{ const i=+inp.dataset.idx; const r=+inp.dataset.row; current[i].body.hours[r].to=inp.value; }); container.querySelectorAll('.loc-lat').forEach(inp=>inp.oninput=()=>{ current[+inp.dataset.idx].body.lat=inp.value; }); container.querySelectorAll('.loc-lng').forEach(inp=>inp.oninput=()=>{ current[+inp.dataset.idx].body.lng=inp.value; }); container.querySelectorAll('.loc-embed').forEach(inp=>inp.oninput=()=>{ current[+inp.dataset.idx].body.embed=inp.value; }); }
    // native drag
    container.addEventListener('dragstart',e=>{ const block=e.target.closest('.builder-block'); if(!block) return; block.classList.add('dragging'); });
    container.addEventListener('dragend',e=>{ const blk=e.target.closest('.builder-block'); if(blk) blk.classList.remove('dragging'); });
    container.addEventListener('dragover',e=>{ e.preventDefault(); const after=getAfter(e.clientY); const dragging=container.querySelector('.dragging'); if(!dragging) return; if(after==null) container.appendChild(dragging); else container.insertBefore(dragging,after); });
    function getAfter(y){ const els=[...container.querySelectorAll('.builder-block:not(.dragging)')]; return els.reduce((closest,child)=>{ const box=child.getBoundingClientRect(); const offset=y-box.top-box.height/2; if(offset<0 && offset>closest.offset){ return {offset,element:child}; } return closest; },{offset:Number.NEGATIVE_INFINITY}).element; }
    document.getElementById('addBlockBtn')?.addEventListener('click',()=> addBlock(document.getElementById('newBlockType').value));
    document.getElementById('saveAllBtn')?.addEventListener('click',()=>{ syncOrder(); const payload={ blocks: current.map(b=>({id:b.id,type:b.type,enabled:b.enabled,title:b.title,body:b.body})) }; fetch(cfg.saveRoute,{method:'POST',headers:{'X-CSRF-TOKEN':cfg.csrf,'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify(payload)}).then(r=>r.json()).then(()=>{ window.notify? window.notify.success(cfg.i18n.saved):alert(cfg.i18n.saved); window.location.reload(); }).catch(()=>{ window.notify? window.notify.error('Error'):alert('Error'); }); });
    function syncOrder(){ const newOrder=[]; container.querySelectorAll('.builder-block').forEach(el=> newOrder.push(current[+el.dataset.index])); current=newOrder; }
    render();
  }
  if(document.readyState==='loading') document.addEventListener('DOMContentLoaded', init); else init();
})();
