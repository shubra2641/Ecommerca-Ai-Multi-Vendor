/*
 * International Telephone Input v18.5.3
 * https://github.com/jackocnr/intl-tel-input.git
 * Licensed under the MIT license
 */

!(function(a) {typeof module === 'object' && module.exports ? module.exports = a() : window.intlTelInput = a();}((a) => {'use strict';return (function() {function b(a) {for (let b = 1;b < arguments.length;b++) {var d = arguments[b] != null ? Object(arguments[b]) : {}, e = Object.keys(d);typeof Object.getOwnPropertySymbols === 'function' && e.push.apply(e, Object.getOwnPropertySymbols(d).filter((a) => {return Object.getOwnPropertyDescriptor(d, a).enumerable;})), e.forEach((b) => {c(a, b, d[b]);});} return a;} function c(a, b, c) {return b = g(b), b in a ? Object.defineProperty(a, b, { value: c,
    enumerable: !0,
    configurable: !0,
    writable: !0 }) : a[b] = c, a;} function d(a, b) {if (!(a instanceof b)) {throw new TypeError('Cannot call a class as a function');}} function e(a, b) {for (let c = 0;c < b.length;c++) {const d = b[c];d.enumerable = d.enumerable || !1, d.configurable = !0, 'value' in d && (d.writable = !0), Object.defineProperty(a, g(d.key), d);}} function f(a, b, c) {return b && e(a.prototype, b), c && e(a, c), Object.defineProperty(a, 'prototype', { writable: !1 }), a;} function g(a) {const b = h(a, 'string');return typeof b === 'symbol' ? b : String(b);} function h(b, c) {if (typeof b !== 'object' || b === null) {return b;} const d = b[Symbol.toPrimitive];if (d !== a) {const e = d.call(b, c || 'default');if (typeof e !== 'object') {return e;} throw new TypeError('@@toPrimitive must return a primitive value.');} return (c === 'string' ? String : Number)(b);} for (var i = [['Afghanistan', 'af', '93'], ['Albania', 'al', '355'], ['Algeria', 'dz', '213'], ['American Samoa', 'as', '1', 5, ['684']], ['Andorra', 'ad', '376'], ['Angola', 'ao', '244'], ['Anguilla', 'ai', '1', 6, ['264']], ['Antigua & Barbuda', 'ag', '1', 7, ['268']], ['Argentina', 'ar', '54'], ['Armenia', 'am', '374'], ['Aruba', 'aw', '297'], ['Ascension Island', 'ac', '247'], ['Australia', 'au', '61', 0], ['Austria', 'at', '43'], ['Azerbaijan', 'az', '994'], ['Bahamas', 'bs', '1', 8, ['242']], ['Bahrain', 'bh', '973'], ['Bangladesh', 'bd', '880'], ['Barbados', 'bb', '1', 9, ['246']], ['Belarus', 'by', '375'], ['Belgium', 'be', '32'], ['Belize', 'bz', '501'], ['Benin', 'bj', '229'], ['Bermuda', 'bm', '1', 10, ['441']], ['Bhutan', 'bt', '975'], ['Bolivia', 'bo', '591'], ['Bosnia & Herzegovina', 'ba', '387'], ['Botswana', 'bw', '267'], ['Brazil', 'br', '55'], ['British Indian Ocean Territory', 'io', '246'], ['British Virgin Islands', 'vg', '1', 11, ['284']], ['Brunei', 'bn', '673'], ['Bulgaria', 'bg', '359'], ['Burkina Faso', 'bf', '226'], ['Burundi', 'bi', '257'], ['Cambodia', 'kh', '855'], ['Cameroon', 'cm', '237'], ['Canada', 'ca', '1', 1, ['204', '226', '236', '249', '250', '263', '289', '306', '343', '354', '365', '367', '368', '382', '387', '403', '416', '418', '428', '431', '437', '438', '450', '584', '468', '474', '506', '514', '519', '548', '579', '581', '584', '587', '604', '613', '639', '647', '672', '683', '705', '709', '742', '753', '778', '780', '782', '807', '819', '825', '867', '873', '902', '905']], ['Cape Verde', 'cv', '238'], ['Caribbean Netherlands', 'bq', '599', 1, ['3', '4', '7']], ['Cayman Islands', 'ky', '1', 12, ['345']], ['Central African Republic', 'cf', '236'], ['Chad', 'td', '235'], ['Chile', 'cl', '56'], ['China', 'cn', '86'], ['Christmas Island', 'cx', '61', 2, ['89164']], ['Cocos (Keeling) Islands', 'cc', '61', 1, ['89162']], ['Colombia', 'co', '57'], ['Comoros', 'km', '269'], ['Congo - Brazzaville', 'cg', '242'], ['Congo - Kinshasa', 'cd', '243'], ['Cook Islands', 'ck', '682'], ['Costa Rica', 'cr', '506'], ['Côte d’Ivoire', 'ci', '225'], ['Croatia', 'hr', '385'], ['Cuba', 'cu', '53'], ['Curaçao', 'cw', '599', 0], ['Cyprus', 'cy', '357'], ['Czech Republic', 'cz', '420'], ['Denmark', 'dk', '45'], ['Djibouti', 'dj', '253'], ['Dominica', 'dm', '1', 13, ['767']], ['Dominican Republic', 'do', '1', 2, ['809', '829', '849']], ['Ecuador', 'ec', '593'], ['Egypt', 'eg', '20'], ['El Salvador', 'sv', '503'], ['Equatorial Guinea', 'gq', '240'], ['Eritrea', 'er', '291'], ['Estonia', 'ee', '372'], ['Eswatini', 'sz', '268'], ['Ethiopia', 'et', '251'], ['Falkland Islands', 'fk', '500'], ['Faroe Islands', 'fo', '298'], ['Fiji', 'fj', '679'], ['Finland', 'fi', '358', 0], ['France', 'fr', '33'], ['French Guiana', 'gf', '594'], ['French Polynesia', 'pf', '689'], ['Gabon', 'ga', '241'], ['Gambia', 'gm', '220'], ['Georgia', 'ge', '995'], ['Germany', 'de', '49'], ['Ghana', 'gh', '233'], ['Gibraltar', 'gi', '350'], ['Greece', 'gr', '30'], ['Greenland', 'gl', '299'], ['Grenada', 'gd', '1', 14, ['473']], ['Guadeloupe', 'gp', '590', 0], ['Guam', 'gu', '1', 15, ['671']], ['Guatemala', 'gt', '502'], ['Guernsey', 'gg', '44', 1, ['1481', '7781', '7839', '7911']], ['Guinea', 'gn', '224'], ['Guinea-Bissau', 'gw', '245'], ['Guyana', 'gy', '592'], ['Haiti', 'ht', '509'], ['Honduras', 'hn', '504'], ['Hong Kong', 'hk', '852'], ['Hungary', 'hu', '36'], ['Iceland', 'is', '354'], ['India', 'in', '91'], ['Indonesia', 'id', '62'], ['Iran', 'ir', '98'], ['Iraq', 'iq', '964'], ['Ireland', 'ie', '353'], ['Isle of Man', 'im', '44', 2, ['1624', '74576', '7524', '7924', '7624']], ['Israel', 'il', '972'], ['Italy', 'it', '39', 0], ['Jamaica', 'jm', '1', 4, ['876', '658']], ['Japan', 'jp', '81'], ['Jersey', 'je', '44', 3, ['1534', '7509', '7700', '7797', '7829', '7937']], ['Jordan', 'jo', '962'], ['Kazakhstan', 'kz', '7', 1, ['33', '7']], ['Kenya', 'ke', '254'], ['Kiribati', 'ki', '686'], ['Kosovo', 'xk', '383'], ['Kuwait', 'kw', '965'], ['Kyrgyzstan', 'kg', '996'], ['Laos', 'la', '856'], ['Latvia', 'lv', '371'], ['Lebanon', 'lb', '961'], ['Lesotho', 'ls', '266'], ['Liberia', 'lr', '231'], ['Libya', 'ly', '218'], ['Liechtenstein', 'li', '423'], ['Lithuania', 'lt', '370'], ['Luxembourg', 'lu', '352'], ['Macau', 'mo', '853'], ['Madagascar', 'mg', '261'], ['Malawi', 'mw', '265'], ['Malaysia', 'my', '60'], ['Maldives', 'mv', '960'], ['Mali', 'ml', '223'], ['Malta', 'mt', '356'], ['Marshall Islands', 'mh', '692'], ['Martinique', 'mq', '596'], ['Mauritania', 'mr', '222'], ['Mauritius', 'mu', '230'], ['Mayotte', 'yt', '262', 1, ['269', '639']], ['Mexico', 'mx', '52'], ['Micronesia', 'fm', '691'], ['Moldova', 'md', '373'], ['Monaco', 'mc', '377'], ['Mongolia', 'mn', '976'], ['Montenegro', 'me', '382'], ['Montserrat', 'ms', '1', 16, ['664']], ['Morocco', 'ma', '212', 0], ['Mozambique', 'mz', '258'], ['Myanmar (Burma)', 'mm', '95'], ['Namibia', 'na', '264'], ['Nauru', 'nr', '674'], ['Nepal', 'np', '977'], ['Netherlands', 'nl', '31'], ['New Caledonia', 'nc', '687'], ['New Zealand', 'nz', '64'], ['Nicaragua', 'ni', '505'], ['Niger', 'ne', '227'], ['Nigeria', 'ng', '234'], ['Niue', 'nu', '683'], ['Norfolk Island', 'nf', '672'], ['North Korea', 'kp', '850'], ['North Macedonia', 'mk', '389'], ['Northern Mariana Islands', 'mp', '1', 17, ['670']], ['Norway', 'no', '47', 0], ['Oman', 'om', '968'], ['Pakistan', 'pk', '92'], ['Palau', 'pw', '680'], ['Palestine', 'ps', '970'], ['Panama', 'pa', '507'], ['Papua New Guinea', 'pg', '675'], ['Paraguay', 'py', '595'], ['Peru', 'pe', '51'], ['Philippines', 'ph', '63'], ['Poland', 'pl', '48'], ['Portugal', 'pt', '351'], ['Puerto Rico', 'pr', '1', 3, ['787', '939']], ['Qatar', 'qa', '974'], ['Réunion', 're', '262', 0], ['Romania', 'ro', '40'], ['Russia', 'ru', '7', 0], ['Rwanda', 'rw', '250'], ['Samoa', 'ws', '685'], ['San Marino', 'sm', '378'], ['São Tomé & Príncipe', 'st', '239'], ['Saudi Arabia', 'sa', '966'], ['Senegal', 'sn', '221'], ['Serbia', 'rs', '381'], ['Seychelles', 'sc', '248'], ['Sierra Leone', 'sl', '232'], ['Singapore', 'sg', '65'], ['Sint Maarten', 'sx', '1', 21, ['721']], ['Slovakia', 'sk', '421'], ['Slovenia', 'si', '386'], ['Solomon Islands', 'sb', '677'], ['Somalia', 'so', '252'], ['South Africa', 'za', '27'], ['South Korea', 'kr', '82'], ['South Sudan', 'ss', '211'], ['Spain', 'es', '34'], ['Sri Lanka', 'lk', '94'], ['St Barthélemy', 'bl', '590', 1], ['St Helena', 'sh', '290'], ['St Kitts & Nevis', 'kn', '1', 18, ['869']], ['St Lucia', 'lc', '1', 19, ['758']], ['St Martin', 'mf', '590', 2], ['St Pierre & Miquelon', 'pm', '508'], ['St Vincent & Grenadines', 'vc', '1', 20, ['784']], ['Sudan', 'sd', '249'], ['Suriname', 'sr', '597'], ['Svalbard & Jan Mayen', 'sj', '47', 1, ['79']], ['Sweden', 'se', '46'], ['Switzerland', 'ch', '41'], ['Syria', 'sy', '963'], ['Taiwan', 'tw', '886'], ['Tajikistan', 'tj', '992'], ['Tanzania', 'tz', '255'], ['Thailand', 'th', '66'], ['Timor-Leste', 'tl', '670'], ['Togo', 'tg', '228'], ['Tokelau', 'tk', '690'], ['Tonga', 'to', '676'], ['Trinidad & Tobago', 'tt', '1', 22, ['868']], ['Tunisia', 'tn', '216'], ['Turkey', 'tr', '90'], ['Turkmenistan', 'tm', '993'], ['Turks & Caicos Islands', 'tc', '1', 23, ['649']], ['Tuvalu', 'tv', '688'], ['Uganda', 'ug', '256'], ['Ukraine', 'ua', '380'], ['United Arab Emirates', 'ae', '971'], ['United Kingdom', 'gb', '44', 0], ['United States', 'us', '1', 0], ['Uruguay', 'uy', '598'], ['US Virgin Islands', 'vi', '1', 24, ['340']], ['Uzbekistan', 'uz', '998'], ['Vanuatu', 'vu', '678'], ['Vatican City', 'va', '39', 1, ['06698']], ['Venezuela', 've', '58'], ['Vietnam', 'vn', '84'], ['Wallis & Futuna', 'wf', '681'], ['Western Sahara', 'eh', '212', 1, ['5288', '5289']], ['Yemen', 'ye', '967'], ['Zambia', 'zm', '260'], ['Zimbabwe', 'zw', '263'], ['Åland Islands', 'ax', '358', 1, ['18']]], j = 0;j < i.length;j++) {const k = i[j];i[j] = { name: k[0],
    iso2: k[1],
    dialCode: k[2],
    priority: k[3] || 0,
    areaCodes: k[4] || null };} const l = { getInstance: function(a) {const b = a.getAttribute('data-intl-tel-input-id');return window.intlTelInputGlobals.instances[b];},
    instances: {},
    documentReady: function() {return document.readyState === 'complete';} };typeof window === 'object' && (window.intlTelInputGlobals = l);let m = 0, n = { allowDropdown: !0,
        autoInsertDialCode: !1,
        autoPlaceholder: 'polite',
        countrySearch: !1,
        customContainer: '',
        customPlaceholder: null,
        dropdownContainer: null,
        excludeCountries: [],
        fixDropdownWidth: !1,
        formatOnDisplay: !0,
        geoIpLookup: null,
        hiddenInput: '',
        initialCountry: '',
        localizedCountries: null,
        nationalMode: !0,
        onlyCountries: [],
        placeholderNumberType: 'MOBILE',
        preferredCountries: ['us', 'gb'],
        separateDialCode: !1,
        showFlags: !0,
        useFullscreenPopup: typeof navigator !== 'undefined' && typeof window !== 'undefined' && (/Android.+Mobile|webOS|iPhone|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || window.innerWidth <= 500),
        utilsScript: '' }, o = ['800', '822', '833', '844', '855', '866', '877', '880', '881', '882', '883', '884', '885', '886', '887', '888', '889'], p = function(a, b) {for (let c = Object.keys(a), d = 0;d < c.length;d++) {b(c[d], a[c[d]]);}}, q = function(a) {p(window.intlTelInputGlobals.instances, (b) => {window.intlTelInputGlobals.instances[b][a]();});}, r = (function() {function c(a, b) {const e = this;d(this, c), this.id = m++, this.a = a, this.b = null, this.c = null;const f = b || {};this.d = {}, p(n, (a, b) => {e.d[a] = f.hasOwnProperty(a) ? f[a] : b;}), this.e = Boolean(a.getAttribute('placeholder'));} return f(c, [{ key: '_init',
        value: function() {const a = this;this.d.useFullscreenPopup && (this.d.fixDropdownWidth = !1), this.d.countrySearch && !this.d.useFullscreenPopup && (this.d.fixDropdownWidth = !0), this.d.nationalMode && (this.d.autoInsertDialCode = !1), this.d.separateDialCode && (this.d.autoInsertDialCode = !1);const b = this.d.allowDropdown && !this.d.separateDialCode;if (!this.d.showFlags && b && (this.d.showFlags = !0), this.d.useFullscreenPopup && !this.d.dropdownContainer && (this.d.dropdownContainer = document.body), this.isRTL = Boolean(this.a.closest('[dir=rtl]')), typeof Promise !== 'undefined') {const c = new Promise((b, c) => {a.h = b, a.i = c;}), d = new Promise((b, c) => {a.i0 = b, a.i1 = c;});this.promise = Promise.all([c, d]);} else {this.h = this.i = function() {}, this.i0 = this.i1 = function() {};} this.s = {}, this._b(), this._f(), this._h(), this._i(), this._i3();} }, { key: '_b',
        value: function() {this._d(), this._d2(), this._e(), this.d.localizedCountries && this._d0(), (this.d.onlyCountries.length || this.d.localizedCountries) && this.p.sort(this._d1);} }, { key: '_c',
        value: function(b, c, d) {c.length > this.countryCodeMaxLen && (this.countryCodeMaxLen = c.length), this.q.hasOwnProperty(c) || (this.q[c] = []);for (let e = 0;e < this.q[c].length;e++) {if (this.q[c][e] === b) {return;}} const f = d !== a ? d : this.q[c].length;this.q[c][f] = b;} }, { key: '_d',
        value: function() {if (this.d.onlyCountries.length) {const a = this.d.onlyCountries.map((a) => {return a.toLowerCase();});this.p = i.filter((b) => {return a.indexOf(b.iso2) > -1;});} else if (this.d.excludeCountries.length) {const b = this.d.excludeCountries.map((a) => {return a.toLowerCase();});this.p = i.filter((a) => {return b.indexOf(a.iso2) === -1;});} else {this.p = i;}} }, { key: '_d0',
        value: function() {for (let a = 0;a < this.p.length;a++) {const b = this.p[a].iso2.toLowerCase();this.d.localizedCountries.hasOwnProperty(b) && (this.p[a].name = this.d.localizedCountries[b]);}} }, { key: '_d1',
        value: function(a, b) {return a.name < b.name ? -1 : a.name > b.name ? 1 : 0;} }, { key: '_d2',
        value: function() {this.countryCodeMaxLen = 0, this.dialCodes = {}, this.q = {};for (let a = 0;a < this.p.length;a++) {const b = this.p[a];this.dialCodes[b.dialCode] || (this.dialCodes[b.dialCode] = !0), this._c(b.iso2, b.dialCode, b.priority);} for (let c = 0;c < this.p.length;c++) {const d = this.p[c];if (d.areaCodes) {for (let e = this.q[d.dialCode][0], f = 0;f < d.areaCodes.length;f++) {for (var g = d.areaCodes[f], h = 1;h < g.length;h++) {const i = d.dialCode + g.substr(0, h);this._c(e, i), this._c(d.iso2, i);} this._c(d.iso2, d.dialCode + g);}}}} }, { key: '_e',
        value: function() {this.preferredCountries = [];for (let a = 0;a < this.d.preferredCountries.length;a++) {const b = this.d.preferredCountries[a].toLowerCase(), c = this._y(b, !1, !0);c && this.preferredCountries.push(c);}} }, { key: '_e2',
        value: function(a, b, c) {const d = document.createElement(a);return b && p(b, (a, b) => {return d.setAttribute(a, b);}), c && c.appendChild(d), d;} }, { key: '_f',
        value: function() {this.a.classList.add('iti__tel-input'), this.a.hasAttribute('autocomplete') || this.a.form && this.a.form.hasAttribute('autocomplete') || this.a.setAttribute('autocomplete', 'off');let a = this.d, c = a.allowDropdown, d = a.separateDialCode, e = a.showFlags, f = a.customContainer, g = a.hiddenInput, h = a.dropdownContainer, i = a.fixDropdownWidth, j = a.useFullscreenPopup, k = a.countrySearch, l = 'iti';c && (l += ' iti--allow-dropdown'), d && (l += ' iti--separate-dial-code'), e && (l += ' iti--show-flags'), f && (l += ' '.concat(f));const m = this._e2('div', { 'class': l });this.a.parentNode.insertBefore(m, this.a);const n = c || e || d;if (n && (this.k = this._e2('div', { 'class': 'iti__flag-container' }, m)), m.appendChild(this.a), n && (this.selectedFlag = this._e2('div', b({ 'class': 'iti__selected-flag' }, c && { role: 'combobox',
            'aria-haspopup': 'listbox',
            'aria-controls': 'iti-'.concat(this.id, '__country-listbox'),
            'aria-expanded': 'false',
            'aria-label': 'Telephone country code' }), this.k)), e && (this.l = this._e2('div', { 'class': 'iti__flag' }, this.selectedFlag)), this.selectedFlag && this.a.disabled && this.selectedFlag.setAttribute('aria-disabled', 'true'), d && (this.t = this._e2('div', { 'class': 'iti__selected-dial-code' }, this.selectedFlag)), c) {this.a.disabled || this.selectedFlag.setAttribute('tabindex', '0'), this.u = this._e2('div', { 'class': 'iti__arrow' }, this.selectedFlag);const o = i ? '' : 'iti--flexible-dropdown-width';if (this.dropdownContent = this._e2('div', { 'class': 'iti__dropdown-content iti__hide '.concat(o) }), k && (this.searchInput = this._e2('input', { type: 'text',
            'class': 'iti__search-input',
            placeholder: 'Search' }, this.dropdownContent)), this.m = this._e2('ul', { 'class': 'iti__country-list',
            id: 'iti-'.concat(this.id, '__country-listbox'),
            role: 'listbox',
            'aria-label': 'List of countries' }, this.dropdownContent), this.preferredCountries.length && !k && (this._g(this.preferredCountries, 'iti__preferred', !0), this._e2('li', { 'class': 'iti__divider',
            'aria-hidden': 'true' }, this.m)), this._g(this.p, 'iti__standard'), h) {let p = 'iti iti--container';j && (p += ' iti--fullscreen-popup'), k && (p += ' iti--country-search'), this.dropdown = this._e2('div', { 'class': p }), this.dropdown.appendChild(this.dropdownContent);} else {this.k.appendChild(this.dropdownContent);}} if (g) {let q = g, r = this.a.getAttribute('name');if (r) {const s = r.lastIndexOf('[');s !== -1 && (q = ''.concat(r.substr(0, s), '[').concat(q, ']'));} this.hiddenInput = this._e2('input', { type: 'hidden',
            name: q }), m.appendChild(this.hiddenInput);}} }, { key: '_g',
        value: function(a, b, c) {for (let d = 0;d < a.length;d++) {const e = a[d], f = c ? '-preferred' : '', g = this._e2('li', { id: 'iti-'.concat(this.id, '__item-').concat(e.iso2).concat(f),
            'class': 'iti__country '.concat(b),
            tabindex: '-1',
            role: 'option',
            'data-dial-code': e.dialCode,
            'data-country-code': e.iso2,
            'aria-selected': 'false' }, this.m);e.node = g;let h = '';this.d.showFlags && (h += '<div class=\'iti__flag-box\'><div class=\'iti__flag iti__'.concat(e.iso2, '\'></div></div>')), h += '<span class=\'iti__country-name\'>'.concat(e.name, '</span>'), h += '<span class=\'iti__dial-code\'>+'.concat(e.dialCode, '</span>'), g.insertAdjacentHTML('beforeend', h);}} }, { key: '_h',
        value: function() {const a = this.a.getAttribute('value'), b = this.a.value, c = a && a.charAt(0) === '+' && (!b || b.charAt(0) !== '+'), d = c ? a : b, e = this._5(d), f = this._w(d), g = this.d, h = g.initialCountry, i = g.autoInsertDialCode;if (e && !f) {this._v(d);} else if (h !== 'auto') {const j = h && this._y(h, !1, !0);j ? this._z(h.toLowerCase()) : e && f ? this._z('us') : (this.j = this.preferredCountries.length ? this.preferredCountries[0].iso2 : this.p[0].iso2, d || this._z(this.j)), !d && i && (this.a.value = '+'.concat(this.s.dialCode));}d && this._u(d);} }, { key: '_i',
        value: function() {this._j(), this.d.autoInsertDialCode && this._l(), this.d.allowDropdown && this._i2(), this.hiddenInput && this._i0();} }, { key: '_i0',
        value: function() {const a = this;this._a14 = function() {a.hiddenInput.value = a.getNumber();}, this.a.form && this.a.form.addEventListener('submit', this._a14);} }, { key: '_i1',
        value: function() {for (var a = this.a;a && a.tagName !== 'LABEL';) {a = a.parentNode;} return a;} }, { key: '_i2',
        value: function() {const a = this;this._a9 = function(b) {a.dropdownContent.classList.contains('iti__hide') ? a.a.focus() : b.preventDefault();};const b = this._i1();b && b.addEventListener('click', this._a9), this._a10 = function() {!a.dropdownContent.classList.contains('iti__hide') || a.a.disabled || a.a.readOnly || a._n();}, this.selectedFlag.addEventListener('click', this._a10), this._a11 = function(b) {a.dropdownContent.classList.contains('iti__hide') && ['ArrowUp', 'ArrowDown', ' ', 'Enter'].includes(b.key) && (b.preventDefault(), b.stopPropagation(), a._n()), b.key === 'Tab' && a._2();}, this.k.addEventListener('keydown', this._a11);} }, { key: '_i3',
        value: function() {const a = this;this.d.utilsScript && !window.intlTelInputUtils ? window.intlTelInputGlobals.documentReady() ? window.intlTelInputGlobals.loadUtils(this.d.utilsScript) : window.addEventListener('load', () => {window.intlTelInputGlobals.loadUtils(a.d.utilsScript);}) : this.i0(), this.d.initialCountry === 'auto' ? this._i4() : this.h();} }, { key: '_i4',
        value: function() {window.intlTelInputGlobals.autoCountry ? this.handleAutoCountry() : window.intlTelInputGlobals.startedLoadingAutoCountry || (window.intlTelInputGlobals.startedLoadingAutoCountry = !0, typeof this.d.geoIpLookup === 'function' && this.d.geoIpLookup((a) => {window.intlTelInputGlobals.autoCountry = a.toLowerCase(), setTimeout(() => {return q('handleAutoCountry');});}, () => {return q('rejectAutoCountryPromise');}));} }, { key: '_j',
        value: function() {const a = this;this._a12 = function() {a._v(a.a.value) && a._m2CountryChange();}, this.a.addEventListener('keyup', this._a12), this._a13 = function() {setTimeout(a._a12);}, this.a.addEventListener('cut', this._a13), this.a.addEventListener('paste', this._a13);} }, { key: '_j2',
        value: function(a) {const b = this.a.getAttribute('maxlength');return b && a.length > b ? a.substr(0, b) : a;} }, { key: '_l',
        value: function() {const a = this;this._a8 = function() {a._l2();}, this.a.form && this.a.form.addEventListener('submit', this._a8), this.a.addEventListener('blur', this._a8);} }, { key: '_l2',
        value: function() {if (this.a.value.charAt(0) === '+') {const a = this._m(this.a.value);a && this.s.dialCode !== a || (this.a.value = '');}} }, { key: '_m',
        value: function(a) {return a.replace(/\D/g, '');} }, { key: '_m2',
        value: function(a) {const b = document.createEvent('Event');b.initEvent(a, !0, !0), this.a.dispatchEvent(b);} }, { key: '_n',
        value: function() {this.d.fixDropdownWidth && (this.dropdownContent.style.width = ''.concat(this.a.offsetWidth, 'px')), this.dropdownContent.classList.remove('iti__hide'), this.selectedFlag.setAttribute('aria-expanded', 'true'), this._o(), this.d.countrySearch ? (this._x(this.m.firstElementChild, !1), this.searchInput.focus()) : this.b && (this._x(this.b, !1), this._3(this.b, !0)), this._p(), this.u.classList.add('iti__arrow--up'), this._m2('open:countrydropdown');} }, { key: '_n2',
        value: function(a, b, c) {c && !a.classList.contains(b) ? a.classList.add(b) : !c && a.classList.contains(b) && a.classList.remove(b);} }, { key: '_o',
        value: function() {const a = this;if (this.d.dropdownContainer && this.d.dropdownContainer.appendChild(this.dropdown), !this.d.useFullscreenPopup) {const b = this.a.getBoundingClientRect(), c = window.pageYOffset || document.documentElement.scrollTop, d = b.top + c, e = this.dropdownContent.offsetHeight, f = d + this.a.offsetHeight + e < c + window.innerHeight, g = d - e > c, h = !this.d.countrySearch && !f && g;if (this._n2(this.dropdownContent, 'iti__dropdown-content--dropup', h), this.d.dropdownContainer) {const i = h ? 0 : this.a.offsetHeight;this.dropdown.style.top = ''.concat(d + i, 'px'), this.dropdown.style.left = ''.concat(b.left + document.body.scrollLeft, 'px'), this._a4 = function() {return a._2();}, window.addEventListener('scroll', this._a4);}}} }, { key: '_o2',
        value: function(a) {for (var b = a;b && b !== this.m && !b.classList.contains('iti__country');) {b = b.parentNode;} return b === this.m ? null : b;} }, { key: '_p',
        value: function() {const a = this;this._a0 = function(b) {const c = a._o2(b.target);c && a._x(c, !1);}, this.m.addEventListener('mouseover', this._a0), this._a1 = function(b) {const c = a._o2(b.target);c && a._1(c);}, this.m.addEventListener('click', this._a1);let b = !0;this._a2 = function() {b || a._2(), b = !1;}, document.documentElement.addEventListener('click', this._a2);let c = '', d = null;if (this._a3 = function(b) {['ArrowUp', 'ArrowDown', 'Enter', 'Escape'].includes(b.key) && (b.preventDefault(), b.stopPropagation(), b.key === 'ArrowUp' || b.key === 'ArrowDown' ? a._q(b.key) : b.key === 'Enter' ? a._r() : b.key === 'Escape' && a._2()), !a.d.countrySearch && /^[a-zA-ZÀ-ÿа-яА-Я ]$/.test(b.key) && (b.stopPropagation(), d && clearTimeout(d), c += b.key.toLowerCase(), a._s(c), d = setTimeout(() => {c = '';}, 1e3));}, document.addEventListener('keydown', this._a3), this.d.countrySearch) {let e = function() {const b = a.searchInput.value.trim();b ? a._filterCountries(b.toLowerCase()) : a._filterCountries(null, !0);}, f = null;this._handleSearchChange = function() {f && clearTimeout(f), f = setTimeout(() => {e(), f = null;}, 100);}, this.searchInput.addEventListener('input', this._handleSearchChange), this.searchInput.addEventListener('click', (a) => {return a.stopPropagation();});}} }, { key: '_filterCountries',
        value: function(b) {let c = arguments.length > 1 && arguments[1] !== a && arguments[1], d = !0;this.m.innerHTML = '';for (let e = 0;e < this.p.length;e++) {const f = this.p[e], g = f.name.toLowerCase(), h = '+'.concat(f.dialCode);(c || g.includes(b) || h.includes(b)) && (this.m.appendChild(f.node), d && (this._x(f.node, !1), d = !1));}} }, { key: '_q',
        value: function(a) {let b = a === 'ArrowUp' ? this.c.previousElementSibling : this.c.nextElementSibling;if (b ? b.classList.contains('iti__divider') && (b = a === 'ArrowUp' ? b.previousElementSibling : b.nextElementSibling) : this.m.childElementCount > 1 && (b = a === 'ArrowUp' ? this.m.lastElementChild : this.m.firstElementChild), b) {const c = !this.d.countrySearch;this._x(b, c), this.d.countrySearch && this._3(b, !1);}} }, { key: '_r',
        value: function() {this.c && this._1(this.c);} }, { key: '_s',
        value: function(a) {for (let b = 0;b < this.p.length;b++) {if (this._t(this.p[b].name, a)) {const c = this.p[b].node;this._x(c, !1), this._3(c, !0);break;}}} }, { key: '_t',
        value: function(a, b) {return a.substr(0, b.length).toLowerCase() === b;} }, { key: '_u',
        value: function(a) {let b = a;if (this.d.formatOnDisplay && window.intlTelInputUtils && this.s) {const c = this.d.nationalMode || b.charAt(0) !== '+' && !this.d.separateDialCode, d = intlTelInputUtils.numberFormat, e = d.NATIONAL, f = d.INTERNATIONAL, g = c ? e : f;b = intlTelInputUtils.formatNumber(b, this.s.iso2, g);}b = this._7(b), this.a.value = b;} }, { key: '_v',
        value: function(a) {let b = a.indexOf('+'), c = b ? a.substring(b) : a, d = this.s.dialCode, e = d === '1';c && e && c.charAt(0) !== '+' && (c.charAt(0) !== '1' && (c = '1'.concat(c)), c = '+'.concat(c)), this.d.separateDialCode && d && c.charAt(0) !== '+' && (c = '+'.concat(d).concat(c));let f = this._5(c, !0), g = this._m(c), h = null;if (f) {const i = this.q[this._m(f)], j = i.indexOf(this.s.iso2) !== -1 && g.length <= f.length - 1;if (!(d === '1' && this._w(g)) && !j) {for (let k = 0;k < i.length;k++) {if (i[k]) {h = i[k];break;}}}} else {c.charAt(0) === '+' && g.length ? h = '' : c && c !== '+' || (h = this.j);} return h !== null && this._z(h);} }, { key: '_w',
        value: function(a) {const b = this._m(a);if (b.charAt(0) === '1') {const c = b.substr(1, 3);return o.indexOf(c) !== -1;} return !1;} }, { key: '_x',
        value: function(a, b) {const c = this.c;c && c.classList.remove('iti__highlight'), this.c = a, this.c.classList.add('iti__highlight'), this.selectedFlag.setAttribute('aria-activedescendant', a.getAttribute('id')), b && this.c.focus();} }, { key: '_y',
        value: function(a, b, c) {for (let d = b ? i : this.p, e = 0;e < d.length;e++) {if (d[e].iso2 === a) {return d[e];}} if (c) {return null;} throw new Error('No country data for \''.concat(a, '\''));} }, { key: '_z',
        value: function(a) {const b = this.d, c = b.allowDropdown, d = b.separateDialCode, e = b.showFlags, f = this.s.iso2 ? this.s : {};if (this.s = a ? this._y(a, !1, !1) : {}, this.s.iso2 && (this.j = this.s.iso2), e && this.l.setAttribute('class', 'iti__flag iti__'.concat(a)), this._setSelectedCountryFlagTitleAttribute(a, d), d) {const g = this.s.dialCode ? '+'.concat(this.s.dialCode) : '';this.t.innerHTML = g;const h = this.selectedFlag.offsetWidth || this._z2();this.isRTL ? this.a.style.paddingRight = ''.concat(h + 6, 'px') : this.a.style.paddingLeft = ''.concat(h + 6, 'px');} if (this._0(), c) {const i = this.b;if (i && (i.classList.remove('iti__active'), i.setAttribute('aria-selected', 'false')), a) {const j = this.m.querySelector('#iti-'.concat(this.id, '__item-').concat(a, '-preferred')) || this.m.querySelector('#iti-'.concat(this.id, '__item-').concat(a));j.setAttribute('aria-selected', 'true'), j.classList.add('iti__active'), this.b = j;}} return f.iso2 !== a;} }, { key: '_setSelectedCountryFlagTitleAttribute',
        value: function(a, b) {if (this.selectedFlag) {let c;c = a && !b ? ''.concat(this.s.name, ': +').concat(this.s.dialCode) : a ? this.s.name : 'Unknown', this.selectedFlag.setAttribute('title', c);}} }, { key: '_z2',
        value: function() {const a = this.a.parentNode.cloneNode();a.style.visibility = 'hidden', document.body.appendChild(a);const b = this.k.cloneNode();a.appendChild(b);const c = this.selectedFlag.cloneNode(!0);b.appendChild(c);const d = c.offsetWidth;return a.parentNode.removeChild(a), d;} }, { key: '_0',
        value: function() {const a = this.d.autoPlaceholder === 'aggressive' || !this.e && this.d.autoPlaceholder === 'polite';if (window.intlTelInputUtils && a) {let b = intlTelInputUtils.numberType[this.d.placeholderNumberType], c = this.s.iso2 ? intlTelInputUtils.getExampleNumber(this.s.iso2, this.d.nationalMode, b) : '';c = this._7(c), typeof this.d.customPlaceholder === 'function' && (c = this.d.customPlaceholder(c, this.s)), this.a.setAttribute('placeholder', c);}} }, { key: '_1',
        value: function(a) {const b = this._z(a.getAttribute('data-country-code'));this._2(), this._4(a.getAttribute('data-dial-code')), this.a.focus();const c = this.a.value.length;this.a.setSelectionRange(c, c), b && this._m2CountryChange();} }, { key: '_2',
        value: function() {this.dropdownContent.classList.add('iti__hide'), this.selectedFlag.setAttribute('aria-expanded', 'false'), this.selectedFlag.removeAttribute('aria-activedescendant'), this.u.classList.remove('iti__arrow--up'), document.removeEventListener('keydown', this._a3), this.d.countrySearch && this.searchInput.removeEventListener('input', this._handleSearchChange), document.documentElement.removeEventListener('click', this._a2), this.m.removeEventListener('mouseover', this._a0), this.m.removeEventListener('click', this._a1), this.d.dropdownContainer && (this.d.useFullscreenPopup || window.removeEventListener('scroll', this._a4), this.dropdown.parentNode && this.dropdown.parentNode.removeChild(this.dropdown)), this._m2('close:countrydropdown');} }, { key: '_3',
        value: function(a, b) {let c = this.dropdownContent, d = window.pageYOffset || document.documentElement.scrollTop, e = c.offsetHeight, f = c.getBoundingClientRect().top + d, g = f + e, h = a.offsetHeight, i = a.getBoundingClientRect().top + d, j = i + h, k = i - f + c.scrollTop, l = e / 2 - h / 2;if (i < f) {b && (k -= l), c.scrollTop = k;} else if (j > g) {b && (k += l);const m = e - h;c.scrollTop = k - m;}} }, { key: '_4',
        value: function(a) {let b, c = this.a.value, d = '+'.concat(a);if (c.charAt(0) === '+') {const e = this._5(c);b = e ? c.replace(e, d) : d, this.a.value = b;} else {this.d.autoInsertDialCode && (b = c ? d + c : d, this.a.value = b);}} }, { key: '_5',
        value: function(a, b) {let c = '';if (a.charAt(0) === '+') {for (let d = '', e = 0;e < a.length;e++) {const f = a.charAt(e);if (!isNaN(parseInt(f, 10))) {if (d += f, b) {this.q[d] && (c = a.substr(0, e + 1));} else if (this.dialCodes[d]) {c = a.substr(0, e + 1);break;} if (d.length === this.countryCodeMaxLen) {break;}}}} return c;} }, { key: '_6',
        value: function() {const a = this.a.value.trim(), b = this.s.dialCode, c = this._m(a);return (this.d.separateDialCode && a.charAt(0) !== '+' && b && c ? '+'.concat(b) : '') + a;} }, { key: '_7',
        value: function(a) {let b = a
;if (this.d.separateDialCode) {let c = this._5(b);if (c) {c = '+'.concat(this.s.dialCode);const d = b[c.length] === ' ' || b[c.length] === '-' ? c.length + 1 : c.length;b = b.substr(d);}} return this._j2(b);} }, { key: '_m2CountryChange',
        value: function() {this._m2('countrychange');} }, { key: 'handleAutoCountry',
        value: function() {this.d.initialCountry === 'auto' && (this.j = window.intlTelInputGlobals.autoCountry, this.a.value || this.setCountry(this.j), this.h());} }, { key: 'handleUtils',
        value: function() {window.intlTelInputUtils && (this.a.value && this._u(this.a.value), this._0()), this.i0();} }, { key: 'destroy',
        value: function() {const a = this.a.form;if (this.d.allowDropdown) {this._2(), this.selectedFlag.removeEventListener('click', this._a10), this.k.removeEventListener('keydown', this._a11);const b = this._i1();b && b.removeEventListener('click', this._a9);} this.hiddenInput && a && a.removeEventListener('submit', this._a14), this.d.autoInsertDialCode && (a && a.removeEventListener('submit', this._a8), this.a.removeEventListener('blur', this._a8)), this.a.removeEventListener('keyup', this._a12), this.a.removeEventListener('cut', this._a13), this.a.removeEventListener('paste', this._a13), this.a.removeAttribute('data-intl-tel-input-id');const c = this.a.parentNode;c.parentNode.insertBefore(this.a, c), c.parentNode.removeChild(c), delete window.intlTelInputGlobals.instances[this.id];} }, { key: 'getExtension',
        value: function() {return window.intlTelInputUtils ? intlTelInputUtils.getExtension(this._6(), this.s.iso2) : '';} }, { key: 'getNumber',
        value: function(a) {if (window.intlTelInputUtils) {const b = this.s.iso2;return intlTelInputUtils.formatNumber(this._6(), b, a);} return '';} }, { key: 'getNumberType',
        value: function() {return window.intlTelInputUtils ? intlTelInputUtils.getNumberType(this._6(), this.s.iso2) : -99;} }, { key: 'getSelectedCountryData',
        value: function() {return this.s;} }, { key: 'getValidationError',
        value: function() {if (window.intlTelInputUtils) {const a = this.s.iso2;return intlTelInputUtils.getValidationError(this._6(), a);} return -99;} }, { key: 'isValidNumber',
        value: function() {const a = this._6().trim();return window.intlTelInputUtils ? intlTelInputUtils.isValidNumber(a, this.s.iso2) : null;} }, { key: 'isPossibleNumber',
        value: function() {const a = this._6().trim();return window.intlTelInputUtils ? intlTelInputUtils.isPossibleNumber(a, this.s.iso2) : null;} }, { key: 'setCountry',
        value: function(a) {const b = a.toLowerCase();this.s.iso2 !== b && (this._z(b), this._4(this.s.dialCode), this._m2CountryChange());} }, { key: 'setNumber',
        value: function(a) {const b = this._v(a);this._u(a), b && this._m2CountryChange();} }, { key: 'setPlaceholderNumberType',
        value: function(a) {this.d.placeholderNumberType = a, this._0();} }]), c;}());l.getCountryData = function() {return i;};const s = function(a, b, c) {const d = document.createElement('script');d.onload = function() {q('handleUtils'), b && b();}, d.onerror = function() {q('rejectUtilsScriptPromise'), c && c();}, d.className = 'iti-load-utils', d.async = !0, d.src = a, document.body.appendChild(d);};return l.loadUtils = function(a) {if (!window.intlTelInputUtils && !window.intlTelInputGlobals.startedLoadingUtilsScript) {if (window.intlTelInputGlobals.startedLoadingUtilsScript = !0, typeof Promise !== 'undefined') {return new Promise((b, c) => {return s(a, b, c);});}s(a);} return null;}, l.defaults = n, l.version = '18.5.3', function(a, b) {const c = new r(a, b);return c._init(), a.setAttribute('data-intl-tel-input-id', c.id), window.intlTelInputGlobals.instances[c.id] = c, c;};}());}));